<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">


    <tx:annotation-driven proxy-target-class="true"/>


    <!-- since we use global-security...we use the custom-after-invocation-provider to register the instances -->
    <!---->
    <bean id="afterInvocationManager"
          class="org.springframework.security.afterinvocation.AfterInvocationProviderManager">
        <property name="providers">
            <list>
                <ref local="domainObjectAfterInvocationProvider"/>
                <ref local="domainObjectCollectionAfterInvocationProvider"/>
            </list>
        </property>
    </bean>

    <bean id="domainObjectAfterInvocationProvider"
          class="gov.nih.nci.ctcae.core.security.afterinvocation.DomainObjectAfterInvocationProvider"
          p:domainObjectAuthorizationCheck-ref="domainObjectAuthorizationCheck">
        <security:custom-after-invocation-provider/>
    </bean>
    <bean id="domainObjectCollectionAfterInvocationProvider"
          class="gov.nih.nci.ctcae.core.security.afterinvocation.DomainObjectCollectionAfterInvocationProvider"
          p:domainObjectAuthorizationCheck-ref="domainObjectAuthorizationCheck">
        <security:custom-after-invocation-provider/>
    </bean>


    <security:global-method-security access-decision-manager-ref="accessDecisionManager">
        <security:protect-pointcut
                expression="execution(* gov.nih.nci.ctcae.core.repository.secured.*Repository.*(..))"
                access="IS_AUTHENTICATED_FULLY"/>
    </security:global-method-security>


    <!--do not change this salt source. because it must be same as <salt-source/> tag -->
    <!--It will create a daoAuthenticationProvider-->
    <security:authentication-provider user-service-ref="userRepository">
        <security:password-encoder ref="passwordEncoder">
            <security:salt-source user-property="username"/>
        </security:password-encoder>

    </security:authentication-provider>


    <!-- Automatically receives AuthenticationEvent messages from DaoAuthenticationProvider -->
    <bean id="authorizationLoggerListener"
          class="org.springframework.security.event.authorization.LoggerListener"/>

    <bean id="authenticationLoggerListener"
          class="org.springframework.security.event.authorization.LoggerListener"/>


    <bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
        <property name="decisionVoters">
            <list>
                <ref local="roleVoter"/>
                <ref local="authenticatedVoter"/>
                <ref local="domainObjectAuthorizationCheckVoter"/>
            </list>
        </property>

    </bean>

    <bean id="roleVoter" class="org.springframework.security.vote.RoleVoter">
        <property name="rolePrefix" value="PRIVILEGE_"/>
    </bean>
    <bean id="domainObjectAuthorizationCheckVoter"
          class="gov.nih.nci.ctcae.core.security.beforeinvocation.DomainObjectAuthorizationCheckVoter">
        <property name="methodAuthorizationChecks">
            <list>
                <bean class="gov.nih.nci.ctcae.core.security.beforeinvocation.OrganizationClinicalStaffAuthorizationCheck"
                      p:domainObjectAuthorizationCheck-ref="domainObjectAuthorizationCheck"
                      p:studyOrganizationRepository-ref="studyOrganizationRepository"/>
            </list>
        </property>
    </bean>

    <bean id="domainObjectAuthorizationCheck" class="gov.nih.nci.ctcae.core.security.DomainObjectAuthorizationCheck">
        <property name="ignoredClasses">
            <list>
                <value>gov.nih.nci.ctcae.core.domain.OrganizationClinicalStaff</value>
            </list>
        </property>
    </bean>
    <bean id="authenticatedVoter" class="org.springframework.security.vote.AuthenticatedVoter"/>

    <bean id="privilegeAuthorizationCheck" class="gov.nih.nci.ctcae.core.security.PrivilegeAuthorizationCheck">
        <property name="accessDecisionManager" ref="accessDecisionManager"/>
    </bean>


</beans>
