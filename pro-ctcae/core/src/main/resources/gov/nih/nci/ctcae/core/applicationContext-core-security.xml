<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">


    <bean id="userRepository" class="gov.nih.nci.ctcae.core.repository.UserRepository" parent="abstractRepository">
        <property name="passwordEncoder" ref="passwordEncoder"/>
        <property name="saltSource" ref="reflectionSaltSource"/>
    </bean>


    <!--<security:global-method-security access-decision-manager-ref="accessDecisionManager" >-->
    <!--<security:protect-pointcut expression="execution(* gov.nih.nci.ctcae.core.repository.CRFRepository.*(..))"-->
    <!--access="PRIVILEGE_CREATE_FORM"/>-->
    <!--</security:global-method-security>-->

    <bean id="passwordEncoder" class="org.springframework.security.providers.encoding.Md5PasswordEncoder">
        <property name="encodeHashAsBase64" value="true"/>
    </bean>

    <!--do not change this salt source. because it must be same as <salt-source/> tag -->

    <bean id="reflectionSaltSource" class="org.springframework.security.providers.dao.salt.ReflectionSaltSource">
        <property name="userPropertyToUse" value="getUsername"/>
    </bean>

    <!--It will create a daoAuthenticationProvider-->
    <security:authentication-provider user-service-ref="userRepository">
        <security:password-encoder ref="passwordEncoder">
            <security:salt-source user-property="username"/>
        </security:password-encoder>

    </security:authentication-provider>


    <!-- Automatically receives AuthenticationEvent messages from DaoAuthenticationProvider -->
    <bean id="authorizationLoggerListener"
          class="org.springframework.security.event.authorization.LoggerListener"/>

    <bean id="authenticationLoggerListener"
          class="org.springframework.security.event.authorization.LoggerListener"/>


    <bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
        <property name="decisionVoters">
            <list>
                <ref local="roleVoter"/>
                <ref local="authenticatedVoter"/>
            </list>
        </property>

    </bean>

    <bean id="roleVoter" class="org.springframework.security.vote.RoleVoter">
        <property name="rolePrefix" value="PRIVILEGE_"/>
    </bean>

    <bean id="authenticatedVoter" class="org.springframework.security.vote.AuthenticatedVoter"/>

    <bean id="privilegeAuthorizationCheck" class="gov.nih.nci.ctcae.core.security.PrivilegeAuthorizationCheck">
        <property name="accessDecisionManager" ref="accessDecisionManager"/>
    </bean>


    <!--It will create a inMemoryUserDetailsService-->

    <!--<user-service id="userDetailsService">-->
    <!--<user name="SYSTEM_ADMIN" password="system_admin" authorities="ROLE_USER"/>-->
    <!--</user-service>-->

    <!--<bean id="afterAclRead" class="gov.nih.nci.ctcae.core.security.AbstractAuthorizationProvider">-->
    <!--<constructor-arg ref="aclService"/>-->
    <!--<constructor-arg>-->
    <!--<list>-->
    <!--<ref local="org.springframework.security.acls.domain.BasePermission.ADMINISTRATION"/>-->
    <!--<ref local="org.springframework.security.acls.domain.BasePermission.READ"/>-->
    <!--</list>-->
    <!--</constructor-arg>-->

    <!--</bean>-->

</beans>
