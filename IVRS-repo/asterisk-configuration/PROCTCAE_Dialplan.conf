;!
;! Automatically generated configuration file
;! Filename: extensions.conf (/etc/asterisk/PROCTCAE_Dialplan.conf)
;! Generator: Manager
;! Creation Date: Mon Apr 25 09:58:58 2012
;!
[callout_en]
exten => 7039350104,1,Goto(s,1)
exten => 5712664016,1,Goto(s,1)
;exten => 5714492695,1,Goto(s,1)



exten => s,1,Set(REPEAT=0)
exten => s,n,Set(LANGUAGE="proctcae/en/")
exten => s,n(playWelcomeMesasge),Background(${LANGUAGE}calloutMessage)
exten => s,n,WaitExten(5)

exten => 1,1,Playback(${LANGUAGE}welcome)
exten => 1,n,Goto(myTest,1,1)

exten => t,1,Set(REPEAT= $[${REPEAT} + 1])
;exten => t,n,Playback(${LANGUAGE}sorryCouldNotHear)
exten => t,n,Gotoif($[${REPEAT}<3]?s,playWelcomeMesasge:abort)
exten => t,n(abort),NoOp("No reponse from user")  ;
exten => t,n,Hangup()

exten => i,1,Playback(${LANGUAGE}invalidOption)
exten => i,n,Goto(s,playWelcomeMesasge)

[callout_es]
exten => 7039350104,1,Goto(s,1)
exten => 5712664016,1,Goto(s,1)

exten => s,1,Set(REPEAT=0)
exten => s,n,Set(LANGUAGE="proctcae/es/")
exten => s,n(playWelcomeMesasge),Background(${LANGUAGE}calloutMessage)
exten => s,n,WaitExten(5)

exten => 1,1,Playback(${LANGUAGE}welcome)
exten => 1,n,Goto(myTest,1,1)

exten => t,1,Set(REPEAT= $[${REPEAT} + 1])
;exten => t,n,Playback(${LANGUAGE}sorryCouldNotHear)
exten => t,n,Gotoif($[${REPEAT}<3]?s,playWelcomeMesasge:abort)
exten => t,n(abort),NoOp("No reponse from user")  ;
exten => t,n,Hangup()

exten => i,1,Playback(${LANGUAGE}invalidOption)
exten => i,n,Goto(s,playWelcomeMesasge)

[callin_en]
exten => 7039350104,1,Goto(s,1)
exten => 5712664016,1,Goto(s,1)
;exten => 5714492695,1,Goto(s,1)

exten => s,1,Set(LANGUAGE="proctcae/en/")
exten => s,n,Playback(${LANGUAGE}welcome)
exten => s,n,Background(${LANGUAGE}languageOption)
exten => s,n,WaitExten(5)

exten => 2,1,Set(LANGUAGE="proctcae/es/")
exten => 2,n,Goto(myTest,1,1)

exten => i,1,Goto(myTest,1,1)

exten => t,1,Goto(myTest,1,1)

;[callin_es]
;exten => 7039350104,1,Set(LANGUAGE="proctcae/es/")

;exten => 1,1,Set(LANGUAGE="proctcae/sp/")
;exten => 1,n,Goto(myTest,1,1)

[myTest]
exten => 1,1,Answer()
;exten => 1,n,Playback(${LANGUAGE}welcome)
exten => 1,n,Set(TIMEOUT(digit)=10)  ; Set Digit Timeout to 10 seconds
exten => 1,n,Set(TIMEOUT(response)=10)  ; Set Response Timeout to 10 seconds
exten => 1,n,Set(CALL_IN_PROGRESS=0)
exten => 1,n,Set(AUTH_TRY_COUNT=0)
exten => 1,n,Set(TIMEOUT_IN_SEC=10)
exten => 1,n,Set(RECALL_PERIOD_MODULUS_VALUE=10)
exten => 1,n,Set(RECORDED_FILE_LOCATION=/var/lib/asterisk/sounds/newSOundFiles/)
exten => 1,n,Set(HALF_WAY_MESSAGE_PLAYED=0)
exten => 1,n,Goto(getCallerId,1)

exten => getCallerId,1,Read(INPUT_CALLER_ID,${LANGUAGE}askCallerId,10,,3)  ;Read CallerId from Keypress event
exten => getCallerId,n,Gotoif($["${INPUT_CALLER_ID}" != ""]?getCallerPin,1)
exten => getCallerId,n(abort),NoOp("**CALLER-ID NOT ENTERED**")
exten => getCallerId,n,Goto(endCall,1)

exten => getCallerPin,1,Read(INPUT_CALLER_PIN,${LANGUAGE}askCallerPin,4,,3)  ;Read CallerPin from Keypress event
exten => getCallerPin,n,Gotoif($["${INPUT_CALLER_PIN}" != ""]?callerAuth,1)
exten => getCallerPin,n(abort),NoOp("**CALLER_PIN NOT ENTERED**")
exten => getCallerPin,n,Goto(endCall,1)

exten => callerAuth,1,Set(INPUT_CALLER_ID='${INPUT_CALLER_ID}')
exten => callerAuth,n,Set(USER_ID=$[${ODBC_LOGIN_AUTH(${INPUT_CALLER_ID,INPUT_CALLER_PIN})}])  ;Call to DB for Caller authentication
exten => callerAuth,n,Gotoif($["${USER_ID}" = ""]?ivrsException,1)
exten => callerAuth,n,Gotoif($[${USER_ID} = -1]?ivrsException,1)
exten => callerAuth,n,Gosubif($[${USER_ID}=0]?myTest,incorrectCredentials,1:getUserForms,1)  ;Check for a valid user

exten => isNewUser,1,Set(IS_NEW_USER=$[${ODBC_IS_NEW_USER(${USER_ID})}])  ;check the user if he is new or already used IVRS
exten => isNewUser,n,Gotoif($["${IS_NEW_USER}" = ""]?ivrsException,1)
exten => isNewUser,n,Gotoif($[${IS_NEW_USER} = -1]?ivrsException,1)
exten => isNewUser,n,Gotoif($[${IS_NEW_USER}=1]?playInstructions,1:playInstructionsOption,1)  ; if new user, directly play instructions

exten => playInstructions,1,Playback(${LANGUAGE}instructions)  ; play Instructions
exten => playInstructions,n,Gotoif($["${QUESTION_ID}" != ""]?getAnswer,1)
exten => playInstructions,n,Goto(getFormQues,1)  ; go to form fill control

exten => playInstructionsOption,1,Read(INSTRUCTIONS_FLAG,${LANGUAGE}playInstructionOption,1,,3)  ; ask if user wants to skip instructions message
exten => playInstructionsOption,n,Gotoif($["${INSTRUCTIONS_FLAG}"=""]?endCallOnNoAnswer,1)  ; If nothing enters after 3 times, end call
exten => playInstructionsOption,n,Gotoif($[${INSTRUCTIONS_FLAG}=1]?skip)  ; If 1, play instructions else skip instructions
exten => playInstructionsOption,n,Gotoif($['${INSTRUCTIONS_FLAG}'='*']?playInstructions,1:invalidOption,1)
exten => playInstructionsOption,n(skip),Goto(getFormQues,1)

exten => endCallOnNoAnswer,1,Playback(${LANGUAGE}sorryCouldNotHear)
exten => endCallOnNoAnswer,n,Playback(${LANGUAGE}tryLater)
exten => endCallOnNoAnswer,n,Goto(endCall,1)

exten => invalidOption,1,Playback(${LANGUAGE}invalidOption)  ; "That's not valid, try again"
exten => invalidOption,n,Goto(playInstructionsOption,1)

exten => h,1,Gotoif($[${CALL_IN_PROGRESS} != 1]?end)
exten => h,n,NoOp("###### MESSAGE: Deleting timestamp for participant with USER_ID -> "${USER_ID} ")
exten => h,n,Set(SET_PARTICIPANT_TIMESTAMP=$[${ODBC_DELETE_PARTICIPANT_TIMESTAMP(${USER_ID})}])
exten => h,n,Gotoif($["${SET_PARTICIPANT_TIMESTAMP}" = ""]?logerror)
exten => h,n,Gotoif($[${SET_PARTICIPANT_TIMESTAMP} = -1]?logerror:end)
exten => h,n(logerror),NoOp("###### ERROR: NOT ABLE TO DELETE PARTICIPANT TIMESTAMP FOR USER_ID -> "${USER_ID})
exten => h,n(end),Hangup()

exten => getUserForms,1,Set(CALL_IN_PROGRESS=1)
exten => getUserForms,n,Set(SET_PARTICIPANT_TIMESTAMP=$[${ODBC_SET_PARTICIPANT_TIMESTAMP(${USER_ID})}])
exten => getUserForms,n,Gotoif($["${SET_PARTICIPANT_TIMESTAMP}" = ""]?ivrsException,1)
exten => getUserForms,n,Gotoif($[${SET_PARTICIPANT_TIMESTAMP} = -1]?ivrsException,1)
exten => getUserForms,n,Set(NUMBER_OF_FORMS=$[${ODBC_GET_NUMBER_OF_FORMS(${USER_ID})}])
exten => getUserForms,n,Gotoif($["${NUMBER_OF_FORMS}" = ""]?ivrsException,1)
exten => getUserForms,n,Gotoif($[${NUMBER_OF_FORMS} = -1]?ivrsException,1)
exten => getUserForms,n,Gosubif($[${NUMBER_OF_FORMS}>0]?isNewUser,1)
exten => getUserForms,n,Playback(${LANGUAGE}noFormsAvailable)
exten => getUserForms,n,Goto(endCall,1)

exten => getFormQues,1,Set(FORM_ID=$[${ODBC_GET_FORM(${USER_ID,FORM_NUMBER})}])  ;Get the FormId from DB
exten => getFormQues,n,Gotoif($["${FORM_ID}" = ""]?ivrsException,1)
exten => getFormQues,n,Gotoif($[${FORM_ID} = -1]?ivrsException,1)
exten => getFormQues,n,Set(FORM_RECALL_PERIOD=$[${ODBC_GET_FORM_RECALL_PERIOD(${USER_ID,FORM_NUMBER})}])  ;Get the recall period for the form
exten => getFormQues,n,Gotoif($["${FORM_RECALL_PERIOD}" = ""]?ivrsException,1)
exten => getFormQues,n,Gotoif($[${FORM_RECALL_PERIOD} = -1]?ivrsException,1)
exten => getFormQues,n,set(CORE_SYMPTOM_FLAG=0)
exten => getFormQues,n,Set(FREQUENCY_FLAG=0)
exten => getFormQues,n,Set(INTERFERENCE_FLAG=0)
exten => getFormQues,n,Set(SEVERITY_FLAG=0)
exten => getFormQues,n,Set(QUESTION_COUNTER=0)
exten => getFormQues,n,Set(QUESTION_MANDATORY_TYPE=0)
exten => getFormQues,n,Goto(formNewOrPending,1)

;check if form is new or in  progress state, based on that play the respective message
exten => formNewOrPending,1,Set(FORM_NEW_OR_PENDING=$[${ODBC_IS_FORM_NEW_OR_PENDING(${USER_ID},${FORM_ID})}])
exten => formNewOrPending,n,Gotoif($["${FORM_NEW_OR_PENDING}" = ""]?ivrsException,1)
exten => formNewOrPending,n,Gotoif($[${FORM_NEW_OR_PENDING} = -1]?ivrsException,1)
exten => formNewOrPending,n,Gotoif($[${FORM_NEW_OR_PENDING} = -2]?ivrsException,1)
exten => formNewOrPending,n,Gotoif($[${FORM_NEW_OR_PENDING} = 0]?playNewSurveyMessage:playInProgressMessage)
exten => formNewOrPending,n(playNewSurveyMessage),Playback(${LANGUAGE}newSurveyMessage)
exten => formNewOrPending,n,Goto(calculateSurveyProcessingTime,1)
exten => formNewOrPending,n(playInProgressMessage),Playback(${LANGUAGE}inProgressSurveyMessage)
exten => formNewOrPending,n,Goto(calculateSurveyProcessingTime,1)

;get the total no. of unanswered question
;based on that play the respective audio file
;create a counter to keep track for decide when the form is half way done
exten => calculateSurveyProcessingTime,1,Set(FORM_HALF_COMPLETED=0)
exten => calculateSurveyProcessingTime,n,Set(NO_OF_UNANSWERED_SYMPTOMS=$[${ODBC_GET_NO_OF_UNANSWERED_SYMPTOMS(${USER_ID,FORM_ID})}])
exten => calculateSurveyProcessingTime,n,Gotoif($["${NO_OF_UNANSWERED_SYMPTOMS}" = ""]?ivrsException,1)
exten => calculateSurveyProcessingTime,n,Gotoif($[${NO_OF_UNANSWERED_SYMPTOMS} = -1]?ivrsException,1)
exten => calculateSurveyProcessingTime,n,Gotoif($[${NO_OF_UNANSWERED_SYMPTOMS} = -2]?ivrsException,1)
exten => calculateSurveyProcessingTime,n,Gotoif($[${NO_OF_UNANSWERED_SYMPTOMS} <= 20]?play10minMessage)
exten => calculateSurveyProcessingTime,n,Gotoif($[${NO_OF_UNANSWERED_SYMPTOMS} <= 50]?play20minMessage)
exten => calculateSurveyProcessingTime,n,Gotoif($[${NO_OF_UNANSWERED_SYMPTOMS} > 50]?play30minMessage)
exten => calculateSurveyProcessingTime,n(play10minMessage),Playback(${LANGUAGE}10minsClip)
exten => calculateSurveyProcessingTime,n,Gotoif($[${NO_OF_UNANSWERED_SYMPTOMS} < 10]?playMandatoryMessages,1)
exten => calculateSurveyProcessingTime,n,Set(FORM_HALF_COMPLETED=$[${NO_OF_UNANSWERED_SYMPTOMS}/2])
exten => calculateSurveyProcessingTime,n,Set(FORM_HALF_COMPLETED=$[FLOOR(${FORM_HALF_COMPLETED})])
exten => calculateSurveyProcessingTime,n,Goto(playMandatoryMessages,1)
exten => calculateSurveyProcessingTime,n(play20minMessage),Playback(${LANGUAGE}20minsClip)
exten => calculateSurveyProcessingTime,n,Set(FORM_HALF_COMPLETED=$[${NO_OF_UNANSWERED_SYMPTOMS}/2])
exten => calculateSurveyProcessingTime,n,Set(FORM_HALF_COMPLETED=$[FLOOR(${FORM_HALF_COMPLETED})])
exten => calculateSurveyProcessingTime,n,Goto(playMandatoryMessages,1)
exten => calculateSurveyProcessingTime,n(play30minMessage),Playback(${LANGUAGE}30minsClip)
exten => calculateSurveyProcessingTime,n,Set(FORM_HALF_COMPLETED=$[${NO_OF_UNANSWERED_SYMPTOMS}/2])
exten => calculateSurveyProcessingTime,n,Set(FORM_HALF_COMPLETED=$[FLOOR(${FORM_HALF_COMPLETED})])
exten => calculateSurveyProcessingTime,n,Goto(playMandatoryMessages,1)

;play mandatory messages
exten => playMandatoryMessages,1,Playback(${LANGUAGE}mandatoryInstructions)
exten => playMandatoryMessages,n,Playback(${LANGUAGE}aboutToFillForm)
exten => playMandatoryMessages,n,Goto(getFirstQuestion,1)

exten => getFirstQuestion,1,Set(QUESTION_ID_TEXT=$[${ODBC_GET_FIRST_QUESTION(${USER_ID,FORM_ID})}])  ;Get the QuestionIdText from DB
exten => getFirstQuestion,n,Gotoif($["${QUESTION_ID_TEXT}" = ""]?ivrsException,1)
exten => getFirstQuestion,n,Gotoif($[${QUESTION_ID_TEXT} = -1]?ivrsException,1)
exten => getFirstQuestion,n,Set(QUESTION_ID=${CUT(QUESTION_ID_TEXT,_,1)})
exten => getFirstQuestion,n,Set(QUESTION_MANDATORY_TYPE_TEMP=${CUT(QUESTION_ID_TEXT,_,2)})
exten => getFirstQuestion,n,Set(QUESTION_MANDATORY_TYPE=${IF($[ "${QUESTION_MANDATORY_TYPE_TEMP}" != ""]?${QUESTION_MANDATORY_TYPE_TEMP}:${QUESTION_MANDATORY_TYPE})})
;Used to check if type of question is already answered
exten => getFirstQuestion,n,Goto(getAnswer,1)

exten => getAnswer,1,Gosubif($[${QUESTION_ID}=0]?afterLastQuestion,1)
exten => getAnswer,n,Set(QUESTION_TEXT=${ODBC_GET_QUESTION_TEXT(${USER_ID,FORM_ID,QUESTION_ID})})  ;Get the QuestionTect from DB
exten => getAnswer,n,Gotoif($["${QUESTION_TEXT}" = ""]?ivrsException,1)
exten => getAnswer,n,Gotoif($["${QUESTION_TEXT}" = "Data Not Found"]?ivrsException,1)
exten => getAnswer,n,Set(QUESTION_FILENAME=${ODBC_GET_QUESTION_FILENAME(${USER_ID,FORM_ID,QUESTION_ID})})  ;Get the QuestionFileName from DB
exten => getAnswer,n,Gotoif($["${QUESTION_FILENAME}" = ""]?ivrsException,1)
exten => getAnswer,n,Gotoif($["${QUESTION_FILENAME}" = "Data Not Found"]?ivrsException,1)
exten => getAnswer,n,Set(QUESTION_TYPE=${ODBC_GET_QUESTION_TYPE(${USER_ID,FORM_ID,QUESTION_ID})})  ;Get the QuestionType from DB
exten => getAnswer,n,Gotoif($["${QUESTION_TYPE}" = ""]?ivrsException,1)
exten => getAnswer,n,Gotoif($["${QUESTION_TYPE}" = "Data Not Found"]?ivrsException,1)
;check if the form is half way done
exten => getAnswer,n,Gosubif($[${FORM_HALF_COMPLETED}!=0]?playHalfWayDone,1)
;check the modulus of QUSETION_COUNTER, if it is modulo of 10 play the recall period
exten => getAnswer,n,Gosubif($[$[${QUESTION_COUNTER}%${RECALL_PERIOD_MODULUS_VALUE}] = 0]?playRecallPeriod,1)
exten => getAnswer,n,Set(QUESTION_COUNTER= $[${QUESTION_COUNTER} + 1])
exten => getAnswer,n,Gosubif($["${QUESTION_TYPE}"="PRESENT_1"]?PRESENTQUESTION1,s,1)
exten => getAnswer,n,Gosubif($["${QUESTION_TYPE}"="PRESENT_2"]?PRESENTQUESTION2,s,1)
exten => getAnswer,n,Gosubif($["${QUESTION_TYPE}"="PRESENT_3"]?PRESENTQUESTION3,s,1)
exten => getAnswer,n,Gosubif($["${QUESTION_TYPE}"="FREQUENCY_1"]?FREQUENCYQUESTION1,s,1)
exten => getAnswer,n,Gosubif($["${QUESTION_TYPE}"="FREQUENCY_2"]?FREQUENCYQUESTION2,s,1)
exten => getAnswer,n,Gosubif($["${QUESTION_TYPE}"="FREQUENCY_3"]?FREQUENCYQUESTION3,s,1)
exten => getAnswer,n,Gosubif($["${QUESTION_TYPE}"="SEVERITY_1"]?SEVERITYQUESTION1,s,1)
exten => getAnswer,n,Gosubif($["${QUESTION_TYPE}"="SEVERITY_2"]?SEVERITYQUESTION2,s,1)
exten => getAnswer,n,Gosubif($["${QUESTION_TYPE}"="SEVERITY_3"]?SEVERITYQUESTION3,s,1)
exten => getAnswer,n,Gosubif($["${QUESTION_TYPE}"="INTERFERENCE_1"]?INTERFERENCEQUESTION1,s,1)
exten => getAnswer,n,Gosubif($["${QUESTION_TYPE}"="INTERFERENCE_2"]?INTERFERENCEQUESTION2,s,1)
exten => getAnswer,n,Gosubif($["${QUESTION_TYPE}"="AMOUNT"]?AMOUNTQUESTION,s,1)
exten => getAnswer,n,Goto(endCall,1)

exten => afterLastQuestion,1,Gosubif($[${CORE_SYMPTOM_FLAG}=1]?SUBMITFORM,s,1)
exten => afterLastQuestion,n,Gosubif($[${CORE_SYMPTOM_FLAG}=0]?CORE_SYMPTOM,s,1)

;check if the form is half way done; plyed only if
exten => playHalfWayDone,1,Gotoif($[${HALF_WAY_MESSAGE_PLAYED} = 1]?skip)
exten => playHalfWayDone,n,Set(NO_OF_UNANSWERED_SYMPTOMS=$[${ODBC_GET_NO_OF_UNANSWERED_SYMPTOMS(${USER_ID,FORM_ID})}])
exten => playHalfWayDone,n,Gotoif($["${NO_OF_UNANSWERED_SYMPTOMS}" = ""]?ivrsException,1)
exten => playHalfWayDone,n,Gotoif($[${NO_OF_UNANSWERED_SYMPTOMS} = -1]?ivrsException,1)
exten => playHalfWayDone,n,Gotoif($[${NO_OF_UNANSWERED_SYMPTOMS} = -2]?ivrsException,1)
exten => playHalfWayDone,n,Gosubif($[${NO_OF_UNANSWERED_SYMPTOMS}=${FORM_HALF_COMPLETED}]?playHalfWayDoneMessage)
exten => playHalfWayDone,n,Return
exten => playHalfWayDone,n(playHalfWayDoneMessage),Playback(${LANGUAGE}halfWayDoneMessage)
exten => playHalfWayDone,n,Set(HALF_WAY_MESSAGE_PLAYED=1)
exten => playHalfWayDone,n(skip),Return

exten => playRecallPeriod,1,Gotoif($[${FORM_RECALL_PERIOD} = 1]?sevenDays:monthly)
exten => playRecallPeriod,n(sevenDays),Playback(${LANGUAGE}7DaysRecallPeriod)
exten => playRecallPeriod,n,Return
exten => playRecallPeriod,n(monthly),Gotoif($[${FORM_RECALL_PERIOD} = 2]?playMonthly:lastTreatment)
exten => playRecallPeriod,n(playMonthly),Playback(${LANGUAGE}monthlyRecallPeriod)
exten => playRecallPeriod,n,Return
exten => playRecallPeriod,n(lastTreatment),Gotoif($[${FORM_RECALL_PERIOD} = 3]?playLastTreatment:noRecall)
exten => playRecallPeriod,n(playLastTreatment),Playback(${LANGUAGE}lastTreatmentRecallPeriod)
exten => playRecallPeriod,n(noRecall),Return

exten => getPreviousQuestion,1,Set(PREVIOUS_QUESTION_ID_TEXT=${ODBC_GET_PREVIOUS_QUESTION(${USER_ID,FORM_ID,QUESTION_ID,QUESTION_MANDATORY_TYPE})})
exten => getPreviousQuestion,n,Gotoif($["${PREVIOUS_QUESTION_ID_TEXT}" = ""]?ivrsException,1)
exten => getPreviousQuestion,n,Gotoif($[${PREVIOUS_QUESTION_ID_TEXT} = -1]?ivrsException,1)
exten => getPreviousQuestion,n,Set(PREVIOUS_QUESTION_ID=${CUT(PREVIOUS_QUESTION_ID_TEXT,_,1)})
exten => getPreviousQuestion,n,Set(PREVIOUS_QUESTION_MANDATORY_TYPE=${CUT(PREVIOUS_QUESTION_ID_TEXT,_,2)})
exten => getPreviousQuestion,n,Gotoif($[${PREVIOUS_QUESTION_MANDATORY_TYPE}=2]?gotoCoreSymptom,1)  ; goto core symptom flow
exten => getPreviousQuestion,n,Gotoif($["${PREVIOUS_QUESTION_ID_TEXT}"!="-2"]?previousQuestionExist)
exten => getPreviousQuestion,n,Playback(${LANGUAGE}noMorePreviousQuestionsExist)
exten => getPreviousQuestion,n,Goto(getAnswer,1)
exten => getPreviousQuestion,n(previousQuestionExist),Set(QUESTION_ID=${PREVIOUS_QUESTION_ID})
exten => getPreviousQuestion,n,Set(QUESTION_MANDATORY_TYPE=${PREVIOUS_QUESTION_MANDATORY_TYPE})
exten => getPreviousQuestion,n,Goto(getAnswer,1)

exten => gotoCoreSymptom,1,Set(SYMPTOM_ID=${PREVIOUS_QUESTION_ID})
exten => gotoCoreSymptom,n,Goto(CORE_SYMPTOM,s,getCoreSymptomFileName)

exten => incorrectCredentials,1,Playback(${LANGUAGE}incorrectIdOrPin)  ;Asking caller to try again if incorrectIdOrPin
exten => incorrectCredentials,n,Set(AUTH_TRY_COUNT=$[${AUTH_TRY_COUNT} + 1])
exten => incorrectCredentials,n,Gotoif($["${AUTH_TRY_COUNT}"!="3"]?getCallerId,1)
exten => incorrectCredentials,n,Playback(${LANGUAGE}contactAdmin)
exten => incorrectCredentials,n,Goto(endCall,1)

exten => endCall,1,Playback(${LANGUAGE}thankyou)
exten => endCall,n,NoOp("###### MESSAGE: Deleting timestamp for participant with USER_ID -> "${USER_ID} ")
exten => endCall,n,Set(SET_PARTICIPANT_TIMESTAMP=$[${ODBC_DELETE_PARTICIPANT_TIMESTAMP(${USER_ID})}])
exten => endCall,n,Gotoif($["${SET_PARTICIPANT_TIMESTAMP}" = ""]?logerror)
exten => endCall,n,Gotoif($[${SET_PARTICIPANT_TIMESTAMP} = -1]?logerror:end)
exten => endCall,n(logerror),NoOp("###### ERROR: NOT ABLE TO DELETE PARTICIPANT TIMESTAMP FOR USER_ID -> "${USER_ID})
exten => endCall,n(end),Hangup()

exten => ivrsException,1,Playback(${LANGUAGE}technicalIssue)
exten => ivrsException,n,Goto(endCall,1)

[questions](!);This is an abstract extension, can be inherited by other extensions. Its purpose is for reuse.
exten => s,1,Set(REPEAT=0)
exten => s,n(playQuestion),Gotoif($["${QUESTION_FILENAME}" != ""]?playAudioFile)
exten => s,n,Swift(${QUESTION_TEXT})
exten => s,n,Goto(saveAnser)  ; skip play question audio file
exten => s,n(playAudioFile),Playback(${LANGUAGE}${QUESTION_FILENAME})
exten => s,n(saveAnser),Set(ANSWER=${ODBC_GET_ANSWER(${USER_ID,FORM_ID,QUESTION_ID,QUESTION_MANDATORY_TYPE})})
exten => s,n,Gotoif($["${ANSWER}" = ""]?myTest,ivrsException,1)
exten => s,n,Gotoif($[${ANSWER} = -1]?myTest,ivrsException,1)
exten => s,n,GotoIf($[${ANSWER}=-5]?notAnswered:alreadyAnswered,1)
exten => s,n(notAnswered),Set(ANSWER=0)
exten => s,n,Gosubif($["${QUESTION_TYPE}"="FREQUENCY_1"]?setFrequencyFlag1,1)
exten => s,n,Gosubif($["${QUESTION_TYPE}"="FREQUENCY_2"]?setFrequencyFlag2,1)
exten => s,n,Gosubif($["${QUESTION_TYPE}"="FREQUENCY_3"]?setFrequencyFlag3,1)
exten => s,n,Gosubif($["${QUESTION_TYPE}"="SEVERITY_1"]?setSeverityFlag1,1)
exten => s,n,Gosubif($["${QUESTION_TYPE}"="SEVERITY_2"]?setSeverityFlag2,1)
exten => s,n,Gosubif($["${QUESTION_TYPE}"="SEVERITY_3"]?setSeverityFlag3,1)
exten => s,n,Gosubif($["${QUESTION_TYPE}"="INTERFERENCE_1"]?setInterferenceFlag1,1)
exten => s,n,Gosubif($["${QUESTION_TYPE}"="INTERFERENCE_2"]?setInterferenceFlag2,1)
exten => s,n(notFirstQuestion),Goto(answer,1)
exten => s,n,Hangup()  ; *error condition. It should never get here.*

exten => alreadyAnswered,1,Set(CONFIRMATION_REQ=1)
exten => alreadyAnswered,n,GotoIf($["${QUESTION_TYPE}"="PRESENT_1"]?playPresentAnswer1,1)
exten => alreadyAnswered,n,GotoIf($["${QUESTION_TYPE}"="PRESENT_2"]?playPresentAnswer2,1)
exten => alreadyAnswered,n,GotoIf($["${QUESTION_TYPE}"="PRESENT_3"]?playPresentAnswer3,1)
exten => alreadyAnswered,n,GotoIf($["${QUESTION_TYPE}"="FREQUENCY_1"]?playFrequencyAnswer1,1)
exten => alreadyAnswered,n,GotoIf($["${QUESTION_TYPE}"="FREQUENCY_2"]?playFrequencyAnswer2,1)
exten => alreadyAnswered,n,GotoIf($["${QUESTION_TYPE}"="FREQUENCY_3"]?playFrequencyAnswer3,1)
exten => alreadyAnswered,n,GotoIf($["${QUESTION_TYPE}"="SEVERITY_1"]?playSeverityAnswer1,1)
exten => alreadyAnswered,n,GotoIf($["${QUESTION_TYPE}"="SEVERITY_2"]?playSeverityAnswer2,1)
exten => alreadyAnswered,n,GotoIf($["${QUESTION_TYPE}"="SEVERITY_3"]?playSeverityAnswer3,1)
exten => alreadyAnswered,n,GotoIf($["${QUESTION_TYPE}"="INTERFERENCE_1"]?playInterferenceAnswer1,1)
exten => alreadyAnswered,n,GotoIf($["${QUESTION_TYPE}"="INTERFERENCE_2"]?playInterferenceAnswer2,1)
exten => alreadyAnswered,n,GotoIf($["${QUESTION_TYPE}"="AMOUNT"]?playAmountAnswer,1)

exten => confirmAnswerSubmission,1,GotoIf($["${CONFIRMATION_REQ}"="0"]?noChangeInAnswer)
exten => confirmAnswerSubmission,n,Read(CONFIRM_ANSWER,${LANGUAGE}confirmOrChangeThisAnswerYN,1,,3)
;exten => confirmAnswerSubmission,n,SayDigits(${CONFIRM_ANSWER})
exten => confirmAnswerSubmission,n,GotoIf($["${CONFIRM_ANSWER}"="1"]?noChangeInAnswer)
exten => confirmAnswerSubmission,n,GotoIf($["${CONFIRM_ANSWER}"="7"]?myTest,getPreviousQuestion,1)
exten => confirmAnswerSubmission,n,GotoIf($["${CONFIRM_ANSWER}"="9"]?confirmAnswerSubmission,1)
exten => confirmAnswerSubmission,n,GotoIf($["${CONFIRM_ANSWER}"="0"]?s,notAnswered:invalidConfirmationOption,1)
exten => confirmAnswerSubmission,n(noChangeInAnswer),Goto(finish,submitAnswerGetNewQuestion)

exten => invalidConfirmationOption,1,PlayBack(${LANGUAGE}invalidOption)  ; play the invalid option entered audio
exten => invalidConfirmationOption,n,Goto(confirmAnswerSubmission,1)  ; go back and repeat confiramtion message

exten => playPresentAnswer1,1,GotoIf($["${ANSWER}"="0"]?play1:two)
exten => playPresentAnswer1,n(play1),Playback(${LANGUAGE}presentOption1)
exten => playPresentAnswer1,n(two),GotoIf($["${ANSWER}"="1"]?play2:confirmAnswer)
exten => playPresentAnswer1,n(play2),Playback(${LANGUAGE}presentOption2)
exten => playPresentAnswer1,n(confirmAnswer),Goto(confirmAnswerSubmission,1)

exten => playPresentAnswer2,1,GotoIf($["${ANSWER}"="0"]?play1:two)
exten => playPresentAnswer2,n(play1),Playback(${LANGUAGE}presentOption1)
exten => playPresentAnswer2,n(two),GotoIf($["${ANSWER}"="1"]?play2:three)
exten => playPresentAnswer2,n(play2),Playback(${LANGUAGE}presentOption2)
exten => playPresentAnswer2,n(three),GotoIf($["${ANSWER}"="2"]?play3:confirmAnswer)
exten => playPresentAnswer2,n(play3),Playback(${LANGUAGE}presentOptionNotAvailable)
exten => playPresentAnswer2,n(confirmAnswer),Goto(confirmAnswerSubmission,1)

exten => playPresentAnswer3,1,GotoIf($["${ANSWER}"="0"]?play1:two)
exten => playPresentAnswer3,n(play1),Playback(${LANGUAGE}presentOption1)
exten => playPresentAnswer3,n(two),GotoIf($["${ANSWER}"="1"]?play2:three)
exten => playPresentAnswer3,n(play2),Playback(${LANGUAGE}presentOption2)
exten => playPresentAnswer3,n(three),GotoIf($["${ANSWER}"="2"]?play3:four)
exten => playPresentAnswer3,n(play3),Playback(${LANGUAGE}presentOptionNotSexuallyActive)
exten => playPresentAnswer3,n(four),GotoIf($["${ANSWER}"="3"]?play4:confirmAnswer)
exten => playPresentAnswer3,n(play4),Playback(${LANGUAGE}presentOptionPreferNotToAnswer)
exten => playPresentAnswer3,n(confirmAnswer),Goto(confirmAnswerSubmission,1)

exten => playFrequencyAnswer1,1,GotoIf($["${ANSWER}"="0"]?play1:two)
exten => playFrequencyAnswer1,n(play1),Playback(${LANGUAGE}frequencyOption1)
exten => playFrequencyAnswer1,n(two),GotoIf($["${ANSWER}"="1"]?play2:three)
exten => playFrequencyAnswer1,n(play2),Playback(${LANGUAGE}frequencyOption2)
exten => playFrequencyAnswer1,n(three),GotoIf($["${ANSWER}"="2"]?play3:four)
exten => playFrequencyAnswer1,n(play3),Playback(${LANGUAGE}frequencyOption3)
exten => playFrequencyAnswer1,n(four),GotoIf($["${ANSWER}"="3"]?play4:five)
exten => playFrequencyAnswer1,n(play4),Playback(${LANGUAGE}frequencyOption4)
exten => playFrequencyAnswer1,n(five),GotoIf($["${ANSWER}"="4"]?play5:confirmAnswer)
exten => playFrequencyAnswer1,n(play5),Playback(${LANGUAGE}frequencyOption5)
exten => playFrequencyAnswer1,n(confirmAnswer),Goto(confirmAnswerSubmission,1)

exten => playFrequencyAnswer2,1,GotoIf($["${ANSWER}"="0"]?play1:two)
exten => playFrequencyAnswer2,n(play1),Playback(${LANGUAGE}frequencyOption1)
exten => playFrequencyAnswer2,n(two),GotoIf($["${ANSWER}"="1"]?play2:three)
exten => playFrequencyAnswer2,n(play2),Playback(${LANGUAGE}frequencyOption2)
exten => playFrequencyAnswer2,n(three),GotoIf($["${ANSWER}"="2"]?play3:four)
exten => playFrequencyAnswer2,n(play3),Playback(${LANGUAGE}frequencyOption3)
exten => playFrequencyAnswer2,n(four),GotoIf($["${ANSWER}"="3"]?play4:five)
exten => playFrequencyAnswer2,n(play4),Playback(${LANGUAGE}frequencyOption4)
exten => playFrequencyAnswer2,n(five),GotoIf($["${ANSWER}"="4"]?play5:six)
exten => playFrequencyAnswer2,n(play5),Playback(${LANGUAGE}frequencyOption5)
exten => playFrequencyAnswer2,n(six),GotoIf($["${ANSWER}"="5"]?play6:confirmAnswer)
exten => playFrequencyAnswer2,n(play6),Playback(${LANGUAGE}optionNotAvailable)
exten => playFrequencyAnswer2,n(confirmAnswer),Goto(confirmAnswerSubmission,1)

exten => playFrequencyAnswer3,1,GotoIf($["${ANSWER}"="0"]?play1:two)
exten => playFrequencyAnswer3,n(play1),Playback(${LANGUAGE}frequencyOption1)
exten => playFrequencyAnswer3,n(two),GotoIf($["${ANSWER}"="1"]?play2:three)
exten => playFrequencyAnswer3,n(play2),Playback(${LANGUAGE}frequencyOption2)
exten => playFrequencyAnswer3,n(three),GotoIf($["${ANSWER}"="2"]?play3:four)
exten => playFrequencyAnswer3,n(play3),Playback(${LANGUAGE}frequencyOption3)
exten => playFrequencyAnswer3,n(four),GotoIf($["${ANSWER}"="3"]?play4:five)
exten => playFrequencyAnswer3,n(play4),Playback(${LANGUAGE}frequencyOption4)
exten => playFrequencyAnswer3,n(five),GotoIf($["${ANSWER}"="4"]?play5:six)
exten => playFrequencyAnswer3,n(play5),Playback(${LANGUAGE}frequencyOption5)
exten => playFrequencyAnswer3,n(six),GotoIf($["${ANSWER}"="5"]?play6:confirmAnswer)
exten => playFrequencyAnswer3,n(play6),Playback(${LANGUAGE}frequencyOptionPreferNotToAnswer)
exten => playFrequencyAnswer3,n(confirmAnswer),Goto(confirmAnswerSubmission,1)

exten => playSeverityAnswer1,1,GotoIf($["${ANSWER}"="0"]?play1:two)
exten => playSeverityAnswer1,n(play1),Playback(${LANGUAGE}severityOption1)
exten => playSeverityAnswer1,n(two),GotoIf($["${ANSWER}"="1"]?play2:three)
exten => playSeverityAnswer1,n(play2),Playback(${LANGUAGE}severityOption2)
exten => playSeverityAnswer1,n(three),GotoIf($["${ANSWER}"="2"]?play3:four)
exten => playSeverityAnswer1,n(play3),Playback(${LANGUAGE}severityOption3)
exten => playSeverityAnswer1,n(four),GotoIf($["${ANSWER}"="3"]?play4:five)
exten => playSeverityAnswer1,n(play4),Playback(${LANGUAGE}severityOption4)
exten => playSeverityAnswer1,n(five),GotoIf($["${ANSWER}"="4"]?play5:confirmAnswer)
exten => playSeverityAnswer1,n(play5),Playback(${LANGUAGE}severityOption5)
exten => playSeverityAnswer1,n(confirmAnswer),Goto(confirmAnswerSubmission,1)

exten => playSeverityAnswer2,1,GotoIf($["${ANSWER}"="0"]?play1:two)
exten => playSeverityAnswer2,n(play1),Playback(${LANGUAGE}severityOption1)
exten => playSeverityAnswer2,n(two),GotoIf($["${ANSWER}"="1"]?play2:three)
exten => playSeverityAnswer2,n(play2),Playback(${LANGUAGE}severityOption2)
exten => playSeverityAnswer2,n(three),GotoIf($["${ANSWER}"="2"]?play3:four)
exten => playSeverityAnswer2,n(play3),Playback(${LANGUAGE}severityOption3)
exten => playSeverityAnswer2,n(four),GotoIf($["${ANSWER}"="3"]?play4:five)
exten => playSeverityAnswer2,n(play4),Playback(${LANGUAGE}severityOption4)
exten => playSeverityAnswer2,n(five),GotoIf($["${ANSWER}"="4"]?play5:six)
exten => playSeverityAnswer2,n(play5),Playback(${LANGUAGE}severityOption5)
exten => playSeverityAnswer2,n(six),GotoIf($["${ANSWER}"="5"]?play6:confirmAnswer)
exten => playSeverityAnswer2,n(play6),Playback(${LANGUAGE}optionNotAvailable)
exten => playSeverityAnswer2,n(confirmAnswer),Goto(confirmAnswerSubmission,1)

exten => playSeverityAnswer3,1,GotoIf($["${ANSWER}"="0"]?play1:two)
exten => playSeverityAnswer3,n(play1),Playback(${LANGUAGE}severityOption1)
exten => playSeverityAnswer3,n(two),GotoIf($["${ANSWER}"="1"]?play2:three)
exten => playSeverityAnswer3,n(play2),Playback(${LANGUAGE}severityOption2)
exten => playSeverityAnswer3,n(three),GotoIf($["${ANSWER}"="2"]?play3:four)
exten => playSeverityAnswer3,n(play3),Playback(${LANGUAGE}severityOption3)
exten => playSeverityAnswer3,n(four),GotoIf($["${ANSWER}"="3"]?play4:five)
exten => playSeverityAnswer3,n(play4),Playback(${LANGUAGE}severityOption4)
exten => playSeverityAnswer3,n(five),GotoIf($["${ANSWER}"="4"]?play5:six)
exten => playSeverityAnswer3,n(play5),Playback(${LANGUAGE}severityOption5)
exten => playSeverityAnswer3,n(six),GotoIf($["${ANSWER}"="5"]?play6:seven)
exten => playSeverityAnswer3,n(play6),Playback(${LANGUAGE}optionNotSexualyActive)
exten => playSeverityAnswer3,n(seven),GotoIf($["${ANSWER}"="6"]?play7:confirmAnswer)
exten => playSeverityAnswer3,n(play7),Playback(${LANGUAGE}optionPreferNotToAnswer)
exten => playSeverityAnswer3,n(confirmAnswer),Goto(confirmAnswerSubmission,1)

exten => playInterferenceAnswer1,1,GotoIf($["${ANSWER}"="0"]?play1:two)
exten => playInterferenceAnswer1,n(play1),Playback(${LANGUAGE}interferenceOption1)
exten => playInterferenceAnswer1,n(two),GotoIf($["${ANSWER}"="1"]?play2:three)
exten => playInterferenceAnswer1,n(play2),Playback(${LANGUAGE}interferenceOption2)
exten => playInterferenceAnswer1,n(three),GotoIf($["${ANSWER}"="2"]?play3:four)
exten => playInterferenceAnswer1,n(play3),Playback(${LANGUAGE}interferenceOption3)
exten => playInterferenceAnswer1,n(four),GotoIf($["${ANSWER}"="3"]?play4:five)
exten => playInterferenceAnswer1,n(play4),Playback(${LANGUAGE}interferenceOption4)
exten => playInterferenceAnswer1,n(five),GotoIf($["${ANSWER}"="4"]?play5:confirmAnswer)
exten => playInterferenceAnswer1,n(play5),Playback(${LANGUAGE}interferenceOption5)
exten => playInterferenceAnswer1,n(confirmAnswer),Goto(confirmAnswerSubmission,1)

exten => playInterferenceAnswer2,1,GotoIf($["${ANSWER}"="0"]?play1:two)
exten => playInterferenceAnswer2,n(play1),Playback(${LANGUAGE}interferenceOption1)
exten => playInterferenceAnswer2,n(two),GotoIf($["${ANSWER}"="1"]?play2:three)
exten => playInterferenceAnswer2,n(play2),Playback(${LANGUAGE}interferenceOption2)
exten => playInterferenceAnswer2,n(three),GotoIf($["${ANSWER}"="2"]?play3:four)
exten => playInterferenceAnswer2,n(play3),Playback(${LANGUAGE}interferenceOption3)
exten => playInterferenceAnswer2,n(four),GotoIf($["${ANSWER}"="3"]?play4:five)
exten => playInterferenceAnswer2,n(play4),Playback(${LANGUAGE}interferenceOption4)
exten => playInterferenceAnswer2,n(five),GotoIf($["${ANSWER}"="4"]?play5:six)
exten => playInterferenceAnswer2,n(play5),Playback(${LANGUAGE}interferenceOption5)
exten => playInterferenceAnswer2,n(six),GotoIf($["${ANSWER}"="5"]?play6:confirmAnswer)
exten => playInterferenceAnswer2,n(play6),Playback(${LANGUAGE}optionNotAvailable)
exten => playInterferenceAnswer2,n(confirmAnswer),Goto(confirmAnswerSubmission,1)

exten => playAmountAnswer,1,GotoIf($["${ANSWER}"="0"]?play1:two)
exten => playAmountAnswer,n(play1),Playback(${LANGUAGE}amountOption1)
exten => playAmountAnswer,n(two),GotoIf($["${ANSWER}"="1"]?play2:three)
exten => playAmountAnswer,n(play2),Playback(${LANGUAGE}amountOption2)
exten => playAmountAnswer,n(three),GotoIf($["${ANSWER}"="2"]?play3:four)
exten => playAmountAnswer,n(play3),Playback(${LANGUAGE}amountOption3)
exten => playAmountAnswer,n(four),GotoIf($["${ANSWER}"="3"]?play4:five)
exten => playAmountAnswer,n(play4),Playback(${LANGUAGE}amountOption4)
exten => playAmountAnswer,n(five),GotoIf($["${ANSWER}"="4"]?play5:confirmAnswer)
exten => playAmountAnswer,n(play5),Playback(${LANGUAGE}amountOption5)
exten => playAmountAnswer,n(confirmAnswer),Goto(confirmAnswerSubmission,1)

exten => setFrequencyFlag1,1,GotoIf($["${FREQUENCY_FLAG}"="1"]?s,notFirstQuestion)
exten => setFrequencyFlag1,n,Playback(${LANGUAGE}frequencyOptions1)
exten => setFrequencyFlag1,n,Read(USER_ANSWER,,1,,)
exten => setFrequencyFlag1,n,GotoIf($["${USER_ANSWER}"=""]?t,1)
exten => setFrequencyFlag1,n,GotoIf($["${USER_ANSWER}"="9"]?s,playQuestion)
exten => setFrequencyFlag1,n,GotoIf($["${USER_ANSWER}"="7"]?myTest,getPreviousQuestion,1)
exten => setFrequencyFlag1,n,GotoIf($["${USER_ANSWER}"="0"]?setAnswer)
exten => setFrequencyFlag1,n,GotoIf($["${USER_ANSWER}"="1"]?setAnswer)
exten => setFrequencyFlag1,n,GotoIf($["${USER_ANSWER}"="2"]?setAnswer)
exten => setFrequencyFlag1,n,GotoIf($["${USER_ANSWER}"="3"]?setAnswer)
exten => setFrequencyFlag1,n,GotoIf($["${USER_ANSWER}"="4"]?setAnswer)
exten => setFrequencyFlag1,n,GotoIf($["${USER_ANSWER}"="*"]?myTest,playInstructions,1)
exten => setFrequencyFlag1,n,GotoIf($["${USER_ANSWER}"="5"]?invalidOption,1)
exten => setFrequencyFlag1,n,GotoIf($["${USER_ANSWER}"="6"]?invalidOption,1)
exten => setFrequencyFlag1,n,GotoIf($["${USER_ANSWER}"="8"]?invalidOption,1)
exten => setFrequencyFlag1,n(setAnswer),Set(ANSWER=${USER_ANSWER})
exten => setFrequencyFlag1,n,SET(FREQUENCY_FLAG=1)
exten => setFrequencyFlag1,n,Goto(finish,1)

exten => setFrequencyFlag2,1,GotoIf($["${FREQUENCY_FLAG}"="1"]?s,notFirstQuestion)
exten => setFrequencyFlag2,n,Playback(${LANGUAGE}frequencyOptions2)
exten => setFrequencyFlag2,n,Read(USER_ANSWER,,1,,)
exten => setFrequencyFlag2,n,GotoIf($["${USER_ANSWER}"=""]?t,1)
exten => setFrequencyFlag2,n,GotoIf($["${USER_ANSWER}"="9"]?s,playQuestion)
exten => setFrequencyFlag2,n,GotoIf($["${USER_ANSWER}"="7"]?myTest,getPreviousQuestion,1)
exten => setFrequencyFlag2,n,GotoIf($["${USER_ANSWER}"="0"]?setAnswer)
exten => setFrequencyFlag2,n,GotoIf($["${USER_ANSWER}"="1"]?setAnswer)
exten => setFrequencyFlag2,n,GotoIf($["${USER_ANSWER}"="2"]?setAnswer)
exten => setFrequencyFlag2,n,GotoIf($["${USER_ANSWER}"="3"]?setAnswer)
exten => setFrequencyFlag2,n,GotoIf($["${USER_ANSWER}"="4"]?setAnswer)
exten => setFrequencyFlag2,n,GotoIf($["${USER_ANSWER}"="*"]?myTest,playInstructions,1)
exten => setFrequencyFlag2,n,GotoIf($["${USER_ANSWER}"="5"]?setAnswer)
exten => setFrequencyFlag2,n,GotoIf($["${USER_ANSWER}"="6"]?invalidOption,1)
exten => setFrequencyFlag2,n,GotoIf($["${USER_ANSWER}"="8"]?invalidOption,1)
exten => setFrequencyFlag2,n(setAnswer),Set(ANSWER=${USER_ANSWER})
exten => setFrequencyFlag2,n,SET(FREQUENCY_FLAG=1)
exten => setFrequencyFlag2,n,Goto(finish,1)

exten => setFrequencyFlag3,1,GotoIf($["${FREQUENCY_FLAG}"="1"]?s,notFirstQuestion)
exten => setFrequencyFlag3,n,Playback(${LANGUAGE}frequencyOptions3)
exten => setFrequencyFlag3,n,Read(USER_ANSWER,,1,,)
exten => setFrequencyFlag3,n,GotoIf($["${USER_ANSWER}"=""]?t,1)
exten => setFrequencyFlag3,n,GotoIf($["${USER_ANSWER}"="9"]?s,playQuestion)
exten => setFrequencyFlag3,n,GotoIf($["${USER_ANSWER}"="7"]?myTest,getPreviousQuestion,1)
exten => setFrequencyFlag3,n,GotoIf($["${USER_ANSWER}"="0"]?setAnswer)
exten => setFrequencyFlag3,n,GotoIf($["${USER_ANSWER}"="1"]?setAnswer)
exten => setFrequencyFlag3,n,GotoIf($["${USER_ANSWER}"="2"]?setAnswer)
exten => setFrequencyFlag3,n,GotoIf($["${USER_ANSWER}"="3"]?setAnswer)
exten => setFrequencyFlag3,n,GotoIf($["${USER_ANSWER}"="4"]?setAnswer)
exten => setFrequencyFlag3,n,GotoIf($["${USER_ANSWER}"="*"]?myTest,playInstructions,1)
exten => setFrequencyFlag3,n,GotoIf($["${USER_ANSWER}"="5"]?setAnswer)
exten => setFrequencyFlag3,n,GotoIf($["${USER_ANSWER}"="6"]?invalidOption,1)
exten => setFrequencyFlag3,n,GotoIf($["${USER_ANSWER}"="8"]?invalidOption,1)
exten => setFrequencyFlag3,n(setAnswer),Set(ANSWER=${USER_ANSWER})
exten => setFrequencyFlag3,n,SET(FREQUENCY_FLAG=1)
exten => setFrequencyFlag3,n,Goto(finish,1)

exten => setSeverityFlag1,1,GotoIf($["${SEVERITY_FLAG}"="1"]?s,notFirstQuestion)
exten => setSeverityFlag1,n,Playback(${LANGUAGE}severityOptions1)
exten => setSeverityFlag1,n,Read(USER_ANSWER,,1,,)
exten => setSeverityFlag1,n,GotoIf($["${USER_ANSWER}"=""]?t,1)
exten => setSeverityFlag1,n,GotoIf($["${USER_ANSWER}"="9"]?s,playQuestion)
exten => setSeverityFlag1,n,GotoIf($["${USER_ANSWER}"="7"]?myTest,getPreviousQuestion,1)
exten => setSeverityFlag1,n,GotoIf($["${USER_ANSWER}"="0"]?setAnswer)
exten => setSeverityFlag1,n,GotoIf($["${USER_ANSWER}"="1"]?setAnswer)
exten => setSeverityFlag1,n,GotoIf($["${USER_ANSWER}"="2"]?setAnswer)
exten => setSeverityFlag1,n,GotoIf($["${USER_ANSWER}"="3"]?setAnswer)
exten => setSeverityFlag1,n,GotoIf($["${USER_ANSWER}"="4"]?setAnswer)
exten => setSeverityFlag1,n,GotoIf($["${USER_ANSWER}"="*"]?myTest,playInstructions,1)
exten => setSeverityFlag1,n,GotoIf($["${USER_ANSWER}"="5"]?invalidOption,1)
exten => setSeverityFlag1,n,GotoIf($["${USER_ANSWER}"="6"]?invalidOption,1)
exten => setSeverityFlag1,n,GotoIf($["${USER_ANSWER}"="8"]?invalidOption,1)
exten => setSeverityFlag1,n(setAnswer),Set(ANSWER=${USER_ANSWER})
exten => setSeverityFlag1,n,SET(SEVERITY_FLAG=1)
exten => setSeverityFlag1,n,Goto(finish,1)

exten => setSeverityFlag2,1,GotoIf($["${SEVERITY_FLAG}"="1"]?s,notFirstQuestion)
exten => setSeverityFlag2,n,Playback(${LANGUAGE}severityOptions2)
exten => setSeverityFlag2,n,Read(USER_ANSWER,,1,,)
exten => setSeverityFlag2,n,GotoIf($["${USER_ANSWER}"=""]?t,1)
exten => setSeverityFlag2,n,GotoIf($["${USER_ANSWER}"="9"]?s,playQuestion)
exten => setSeverityFlag2,n,GotoIf($["${USER_ANSWER}"="7"]?myTest,getPreviousQuestion,1)
exten => setSeverityFlag2,n,GotoIf($["${USER_ANSWER}"="0"]?setAnswer)
exten => setSeverityFlag2,n,GotoIf($["${USER_ANSWER}"="1"]?setAnswer)
exten => setSeverityFlag2,n,GotoIf($["${USER_ANSWER}"="2"]?setAnswer)
exten => setSeverityFlag2,n,GotoIf($["${USER_ANSWER}"="3"]?setAnswer)
exten => setSeverityFlag2,n,GotoIf($["${USER_ANSWER}"="4"]?setAnswer)
exten => setSeverityFlag2,n,GotoIf($["${USER_ANSWER}"="*"]?myTest,playInstructions,1)
exten => setSeverityFlag2,n,GotoIf($["${USER_ANSWER}"="5"]?setAnswer)
exten => setSeverityFlag2,n,GotoIf($["${USER_ANSWER}"="6"]?invalidOption,1)
exten => setSeverityFlag2,n,GotoIf($["${USER_ANSWER}"="8"]?invalidOption,1)
exten => setSeverityFlag2,n(setAnswer),Set(ANSWER=${USER_ANSWER})
exten => setSeverityFlag2,n,SET(SEVERITY_FLAG=1)
exten => setSeverityFlag2,n,Goto(finish,1)

exten => setSeverityFlag3,1,GotoIf($["${SEVERITY_FLAG}"="1"]?s,notFirstQuestion)
exten => setSeverityFlag3,n,Playback(${LANGUAGE}severityOptions3)
exten => setSeverityFlag3,n,Read(USER_ANSWER,,1,,)
exten => setSeverityFlag3,n,GotoIf($["${USER_ANSWER}"=""]?t,1)
exten => setSeverityFlag3,n,GotoIf($["${USER_ANSWER}"="9"]?s,playQuestion)
exten => setSeverityFlag3,n,GotoIf($["${USER_ANSWER}"="7"]?myTest,getPreviousQuestion,1)
exten => setSeverityFlag3,n,GotoIf($["${USER_ANSWER}"="0"]?setAnswer)
exten => setSeverityFlag3,n,GotoIf($["${USER_ANSWER}"="1"]?setAnswer)
exten => setSeverityFlag3,n,GotoIf($["${USER_ANSWER}"="2"]?setAnswer)
exten => setSeverityFlag3,n,GotoIf($["${USER_ANSWER}"="3"]?setAnswer)
exten => setSeverityFlag3,n,GotoIf($["${USER_ANSWER}"="4"]?setAnswer)
exten => setSeverityFlag3,n,GotoIf($["${USER_ANSWER}"="*"]?myTest,playInstructions,1)
exten => setSeverityFlag3,n,GotoIf($["${USER_ANSWER}"="5"]?setAnswer)
exten => setSeverityFlag3,n,GotoIf($["${USER_ANSWER}"="6"]?setAnswer)
exten => setSeverityFlag3,n,GotoIf($["${USER_ANSWER}"="8"]?invalidOption,1)
exten => setSeverityFlag3,n(setAnswer),Set(ANSWER=${USER_ANSWER})
exten => setSeverityFlag3,n,SET(SEVERITY_FLAG=1)
exten => setSeverityFlag3,n,Goto(finish,1)

exten => setInterferenceFlag1,1,GotoIf($["${INTERFERENCE_FLAG}"="1"]?s,notFirstQuestion)
exten => setInterferenceFlag1,n,Playback(${LANGUAGE}interferenceOptions1)
exten => setInterferenceFlag1,n,Read(USER_ANSWER,,1,,)
exten => setInterferenceFlag1,n,GotoIf($["${USER_ANSWER}"=""]?t,1)
exten => setInterferenceFlag1,n,GotoIf($["${USER_ANSWER}"="9"]?s,playQuestion)
exten => setInterferenceFlag1,n,GotoIf($["${USER_ANSWER}"="7"]?myTest,getPreviousQuestion,1)
exten => setInterferenceFlag1,n,GotoIf($["${USER_ANSWER}"="0"]?setAnswer)
exten => setInterferenceFlag1,n,GotoIf($["${USER_ANSWER}"="1"]?setAnswer)
exten => setInterferenceFlag1,n,GotoIf($["${USER_ANSWER}"="2"]?setAnswer)
exten => setInterferenceFlag1,n,GotoIf($["${USER_ANSWER}"="3"]?setAnswer)
exten => setInterferenceFlag1,n,GotoIf($["${USER_ANSWER}"="4"]?setAnswer)
exten => setInterferenceFlag1,n,GotoIf($["${USER_ANSWER}"="*"]?myTest,playInstructions,1)
exten => setInterferenceFlag1,n,GotoIf($["${USER_ANSWER}"="5"]?invalidOption,1)
exten => setInterferenceFlag1,n,GotoIf($["${USER_ANSWER}"="6"]?invalidOption,1)
exten => setInterferenceFlag1,n,GotoIf($["${USER_ANSWER}"="8"]?invalidOption,1)
exten => setInterferenceFlag1,n(setAnswer),Set(ANSWER=${USER_ANSWER})
exten => setInterferenceFlag1,n,SET(INTERFERENCE_FLAG=1)
exten => setInterferenceFlag1,n,Goto(finish,1)

exten => setInterferenceFlag2,1,GotoIf($["${INTERFERENCE_FLAG}"="1"]?s,notFirstQuestion)
exten => setInterferenceFlag2,n,Playback(${LANGUAGE}interferenceOptions2)
exten => setInterferenceFlag2,n,Read(USER_ANSWER,,1,,)
exten => setInterferenceFlag2,n,GotoIf($["${USER_ANSWER}"=""]?t,1)
exten => setInterferenceFlag2,n,GotoIf($["${USER_ANSWER}"="9"]?s,playQuestion)
exten => setInterferenceFlag2,n,GotoIf($["${USER_ANSWER}"="7"]?myTest,getPreviousQuestion,1)
exten => setInterferenceFlag2,n,GotoIf($["${USER_ANSWER}"="0"]?setAnswer)
exten => setInterferenceFlag2,n,GotoIf($["${USER_ANSWER}"="1"]?setAnswer)
exten => setInterferenceFlag2,n,GotoIf($["${USER_ANSWER}"="2"]?setAnswer)
exten => setInterferenceFlag2,n,GotoIf($["${USER_ANSWER}"="3"]?setAnswer)
exten => setInterferenceFlag2,n,GotoIf($["${USER_ANSWER}"="4"]?setAnswer)
exten => setInterferenceFlag2,n,GotoIf($["${USER_ANSWER}"="*"]?myTest,playInstructions,1)
exten => setInterferenceFlag2,n,GotoIf($["${USER_ANSWER}"="5"]?setAnswer)
exten => setInterferenceFlag2,n,GotoIf($["${USER_ANSWER}"="6"]?invalidOption,1)
exten => setInterferenceFlag2,n,GotoIf($["${USER_ANSWER}"="8"]?invalidOption,1)
exten => setInterferenceFlag2,n(setAnswer),Set(ANSWER=${USER_ANSWER})
exten => setInterferenceFlag2,n,SET(INTERFERENCE_FLAG=1)
exten => setInterferenceFlag2,n,Goto(finish,1)

exten => invalidOption,1,Playback(${LANGUAGE}invalidOption)  ; "That's not valid, try again"
exten => invalidOption,n,Goto(s,playQuestion)

exten => finish,1(submitAnswerGetNewQuestion),Set(QUESTION_ID_TEXT=$[${ODBC_ANSWER_QUESTION(${USER_ID,FORM_ID,QUESTION_ID,ANSWER,QUESTION_MANDATORY_TYPE})}])  ;record answer in db and get next question
exten => finish,n,Gotoif($["${QUESTION_ID_TEXT}" = ""]?myTest,ivrsException,1)
exten => finish,n,Gotoif($[${QUESTION_ID_TEXT} = -1]?myTest,ivrsException,1)
exten => finish,n,Set(QUESTION_ID=${CUT(QUESTION_ID_TEXT,_,1)})
exten => finish,n,Set(QUESTION_MANDATORY_TYPE_TEMP=${CUT(QUESTION_ID_TEXT,_,2)})
exten => finish,n,Set(QUESTION_MANDATORY_TYPE=${IF($[ "${QUESTION_MANDATORY_TYPE_TEMP}" != ""]?${QUESTION_MANDATORY_TYPE_TEMP}:${QUESTION_MANDATORY_TYPE})})
exten => finish,n,Goto(myTest,getAnswer,1)


exten => t,1,Set(REPEAT= $[${REPEAT} + 1])
exten => t,n,Playback(${LANGUAGE}sorryCouldNotHear)
exten => t,n,Gotoif($[${REPEAT}<3]?s,playQuestion:abort)
exten => t,n(abort),NoOp("add DB abort here.")  ;
exten => t,n,Playback(${LANGUAGE}tryLater)
exten => t,n,Goto(myTest,endCall,1)

exten => i,1,Playback(${LANGUAGE}invalidOption)  ; "That's not valid, try again"
exten => i,n,Goto(s,playQuestion)

exten => h,1,Gotoif($[${CALL_IN_PROGRESS} != 1]?end)
exten => h,n,NoOp("###### MESSAGE: Deleting timestamp for participant with USER_ID -> "${USER_ID} ")
exten => h,n,Set(SET_PARTICIPANT_TIMESTAMP=$[${ODBC_DELETE_PARTICIPANT_TIMESTAMP(${USER_ID})}])
exten => h,n,Gotoif($["${SET_PARTICIPANT_TIMESTAMP}" = ""]?logerror)
exten => h,n,Gotoif($[${SET_PARTICIPANT_TIMESTAMP} = -1]?logerror:end)
exten => h,n(logerror),NoOp("###### ERROR: NOT ABLE TO DELETE PARTICIPANT TIMESTAMP FOR USER_ID -> "${USER_ID})
exten => h,n(end),Hangup()

[PRESENTQUESTION1](questions)
exten => answer,1,Background(${LANGUAGE}presentOptions1)
exten => answer,n,WaitExten

exten => 0,1,Set(ANSWER=0)  ;no
exten => 0,n,Goto(finish,1)

exten => 1,1,Set(ANSWER=1)  ;yes
exten => 1,n,Goto(finish,1)

exten => 7,1,Set(ANSWER=0)  ;no
exten => 7,n,Goto(myTest,getPreviousQuestion,1)

exten => 9,1,Set(ANSWER=0)
exten => 9,n,Goto(s,playQuestion)

exten => *,1,Set(ANSWER=0)
exten => *,n,Goto(myTest,playInstructions,1)

[PRESENTQUESTION2](questions)
exten => answer,1,Background(${LANGUAGE}presentOptions2)
exten => answer,n,WaitExten

exten => 0,1,Set(ANSWER=0)  ;no
exten => 0,n,Goto(finish,1)

exten => 1,1,Set(ANSWER=1)  ;yes
exten => 1,n,Goto(finish,1)

exten => 2,1,Set(ANSWER=2)  ;not applicable
exten => 2,n,Goto(finish,1)

exten => 7,1,Set(ANSWER=0)  ;no
exten => 7,n,Goto(myTest,getPreviousQuestion,1)

exten => 9,1,Set(ANSWER=0)
exten => 9,n,Goto(s,playQuestion)

exten => *,1,Set(ANSWER=0)
exten => *,n,Goto(myTest,playInstructions,1)

[PRESENTQUESTION3](questions)
exten => answer,1,Background(${LANGUAGE}presentOptions3)
exten => answer,n,WaitExten

exten => 0,1,Set(ANSWER=0)  ;no
exten => 0,n,Goto(finish,1)

exten => 1,1,Set(ANSWER=1)  ;yes
exten => 1,n,Goto(finish,1)

exten => 2,1,Set(ANSWER=2)  ;Not sexually active
exten => 2,n,Goto(finish,1)

exten => 3,1,Set(ANSWER=3)  ;Prefer not to answer
exten => 3,n,Goto(finish,1)

exten => 7,1,Set(ANSWER=0)  ;no
exten => 7,n,Goto(myTest,getPreviousQuestion,1)

exten => 9,1,Set(ANSWER=0)
exten => 9,n,Goto(s,playQuestion)

exten => *,1,Set(ANSWER=0)
exten => *,n,Goto(myTest,playInstructions,1)

[FREQUENCYQUESTION1](questions)
exten => answer,1,Background(${LANGUAGE}frequencyOptions1)
exten => answer,n,WaitExten

exten => 0,1,Set(ANSWER=0)  ;never
exten => 0,n,Goto(finish,1)

exten => 1,1,Set(ANSWER=1)  ;rarely
exten => 1,n,Goto(finish,1)

exten => 2,1,Set(ANSWER=2)  ;occationally
exten => 2,n,Goto(finish,1)

exten => 3,1,Set(ANSWER=3)  ;frequently
exten => 3,n,Goto(finish,1)

exten => 4,1,Set(ANSWER=4)  ;almost constantly
exten => 4,n,Goto(finish,1)

exten => 7,1,Set(ANSWER=0)  ;no
exten => 7,n,Goto(myTest,getPreviousQuestion,1)

exten => 9,1,Set(ANSWER=0)
exten => 9,n,Goto(s,playQuestion)

exten => *,1,Set(ANSWER=0)
exten => *,n,Goto(myTest,playInstructions,1)

[FREQUENCYQUESTION2](questions)
exten => answer,1,Background(${LANGUAGE}frequencyOptions2)
exten => answer,n,WaitExten

exten => 0,1,Set(ANSWER=0)  ;never
exten => 0,n,Goto(finish,1)

exten => 1,1,Set(ANSWER=1)  ;rarely
exten => 1,n,Goto(finish,1)

exten => 2,1,Set(ANSWER=2)  ;occationally
exten => 2,n,Goto(finish,1)

exten => 3,1,Set(ANSWER=3)  ;frequently
exten => 3,n,Goto(finish,1)

exten => 4,1,Set(ANSWER=4)  ;almost constantly
exten => 4,n,Goto(finish,1)

exten => 5,1,Set(ANSWER=5)  ;Not applicable
exten => 5,n,Goto(finish,1)

exten => 7,1,Set(ANSWER=0)  ;no
exten => 7,n,Goto(myTest,getPreviousQuestion,1)

exten => 9,1,Set(ANSWER=0)
exten => 9,n,Goto(s,playQuestion)

exten => *,1,Set(ANSWER=0)
exten => *,n,Goto(myTest,playInstructions,1)

[FREQUENCYQUESTION3](questions)
exten => answer,1,Background(${LANGUAGE}frequencyOptions3)
exten => answer,n,WaitExten

exten => 0,1,Set(ANSWER=0)  ;never
exten => 0,n,Goto(finish,1)

exten => 1,1,Set(ANSWER=1)  ;rarely
exten => 1,n,Goto(finish,1)

exten => 2,1,Set(ANSWER=2)  ;occationally
exten => 2,n,Goto(finish,1)

exten => 3,1,Set(ANSWER=3)  ;frequently
exten => 3,n,Goto(finish,1)

exten => 4,1,Set(ANSWER=4)  ;almost constantly
exten => 4,n,Goto(finish,1)

exten => 5,1,Set(ANSWER=5)  ;Prefer not to answer
exten => 5,n,Goto(finish,1)

exten => 7,1,Set(ANSWER=0)  ;no
exten => 7,n,Goto(myTest,getPreviousQuestion,1)

exten => 9,1,Set(ANSWER=0)
exten => 9,n,Goto(s,playQuestion)

exten => *,1,Set(ANSWER=0)
exten => *,n,Goto(myTest,playInstructions,1)


[SEVERITYQUESTION1](questions)
exten => answer,1,Background(${LANGUAGE}severityOptions1)
exten => answer,n,WaitExten

exten => 0,1,Set(ANSWER=0)  ;none
exten => 0,n,Goto(finish,1)

exten => 1,1,Set(ANSWER=1)  ;mild
exten => 1,n,Goto(finish,1)

exten => 2,1,Set(ANSWER=2)  ;moderate
exten => 2,n,Goto(finish,1)

exten => 3,1,Set(ANSWER=3)  ;severe
exten => 3,n,Goto(finish,1)

exten => 4,1,Set(ANSWER=4)  ;very severe
exten => 4,n,Goto(finish,1)

exten => 7,1,Set(ANSWER=0)  ;no
exten => 7,n,Goto(myTest,getPreviousQuestion,1)

exten => 9,1,Set(ANSWER=0)
exten => 9,n,Goto(s,playQuestion)

exten => *,1,Set(ANSWER=0)
exten => *,n,Goto(myTest,playInstructions,1)

[SEVERITYQUESTION2](questions)
exten => answer,1,Background(${LANGUAGE}severityOptions2)
exten => answer,n,WaitExten

exten => 0,1,Set(ANSWER=0)  ;none
exten => 0,n,Goto(finish,1)

exten => 1,1,Set(ANSWER=1)  ;mild
exten => 1,n,Goto(finish,1)

exten => 2,1,Set(ANSWER=2)  ;moderate
exten => 2,n,Goto(finish,1)

exten => 3,1,Set(ANSWER=3)  ;severe
exten => 3,n,Goto(finish,1)

exten => 4,1,Set(ANSWER=4)  ;very severe
exten => 4,n,Goto(finish,1)

exten => 5,1,Set(ANSWER=5)  ;Not applicable
exten => 5,n,Goto(finish,1)

exten => 7,1,Set(ANSWER=0)  ;no
exten => 7,n,Goto(myTest,getPreviousQuestion,1)

exten => 9,1,Set(ANSWER=0)
exten => 9,n,Goto(s,playQuestion)

exten => *,1,Set(ANSWER=0)
exten => *,n,Goto(myTest,playInstructions,1)

[SEVERITYQUESTION3](questions)
exten => answer,1,Background(${LANGUAGE}severityOptions3)
exten => answer,n,WaitExten

exten => 0,1,Set(ANSWER=0)  ;none
exten => 0,n,Goto(finish,1)

exten => 1,1,Set(ANSWER=1)  ;mild
exten => 1,n,Goto(finish,1)

exten => 2,1,Set(ANSWER=2)  ;moderate
exten => 2,n,Goto(finish,1)

exten => 3,1,Set(ANSWER=3)  ;severe
exten => 3,n,Goto(finish,1)

exten => 4,1,Set(ANSWER=4)  ;very severe
exten => 4,n,Goto(finish,1)

exten => 5,1,Set(ANSWER=5)  ;Not sexually active
exten => 5,n,Goto(finish,1)

exten => 6,1,Set(ANSWER=6)  ;Prefer not to answer
exten => 6,n,Goto(finish,1)

exten => 7,1,Set(ANSWER=0)  ;no
exten => 7,n,Goto(myTest,getPreviousQuestion,1)

exten => 9,1,Set(ANSWER=0)
exten => 9,n,Goto(s,playQuestion)

exten => *,1,Set(ANSWER=0)
exten => *,n,Goto(myTest,playInstructions,1)

[INTERFERENCEQUESTION1](questions)
exten => answer,1,Background(${LANGUAGE}interferenceOptions1)
exten => answer,n,WaitExten

exten => 0,1,Set(ANSWER=0)  ;not at all
exten => 0,n,Goto(finish,1)

exten => 1,1,Set(ANSWER=1)  ;a little bit
exten => 1,n,Goto(finish,1)

exten => 2,1,Set(ANSWER=2)  ;somewhat
exten => 2,n,Goto(finish,1)

exten => 3,1,Set(ANSWER=3)  ;quite a bit
exten => 3,n,Goto(finish,1)

exten => 4,1,Set(ANSWER=4)  ;very much
exten => 4,n,Goto(finish,1)

exten => 7,1,Set(ANSWER=0)  ;no
exten => 7,n,Goto(myTest,getPreviousQuestion,1)

exten => 9,1,Set(ANSWER=0)
exten => 9,n,Goto(s,playQuestion)

exten => *,1,Set(ANSWER=0)
exten => *,n,Goto(myTest,playInstructions,1)

[INTERFERENCEQUESTION2](questions)
exten => answer,1,Background(${LANGUAGE}interferenceOptions2)
exten => answer,n,WaitExten

exten => 0,1,Set(ANSWER=0)  ;not at all
exten => 0,n,Goto(finish,1)

exten => 1,1,Set(ANSWER=1)  ;a little bit
exten => 1,n,Goto(finish,1)

exten => 2,1,Set(ANSWER=2)  ;somewhat
exten => 2,n,Goto(finish,1)

exten => 3,1,Set(ANSWER=3)  ;quite a bit
exten => 3,n,Goto(finish,1)

exten => 4,1,Set(ANSWER=4)  ;very much
exten => 4,n,Goto(finish,1)

exten => 5,1,Set(ANSWER=5)  ;Not applicable
exten => 5,n,Goto(finish,1)

exten => 7,1,Set(ANSWER=0)  ;no
exten => 7,n,Goto(myTest,getPreviousQuestion,1)

exten => 9,1,Set(ANSWER=0)
exten => 9,n,Goto(s,playQuestion)

exten => *,1,Set(ANSWER=0)
exten => *,n,Goto(myTest,playInstructions,1)

[AMOUNTQUESTION](questions)
exten => answer,1,Background(${LANGUAGE}amountOptions)
exten => answer,n,WaitExten

exten => 0,1,Set(ANSWER=0)  ;Not at all
exten => 0,n,Goto(finish,1)

exten => 1,1,Set(ANSWER=1)  ;a little bit
exten => 1,n,Goto(finish,1)

exten => 2,1,Set(ANSWER=2)  ;somewhat
exten => 2,n,Goto(finish,1)

exten => 3,1,Set(ANSWER=3)  ;quite a bit
exten => 3,n,Goto(finish,1)

exten => 4,1,Set(ANSWER=4)  ;very much
exten => 4,n,Goto(finish,1)

exten => 7,1,Set(ANSWER=0)  ;no
exten => 7,n,Goto(myTest,getPreviousQuestion,1)

exten => 9,1,Set(ANSWER=0)
exten => 9,n,Goto(s,playQuestion)

exten => *,1,Set(ANSWER=0)
exten => *,n,Goto(myTest,playInstructions,1)

[SUBMITFORM]
exten => s,1,Set(REPEAT=0)
exten => s,n(promptRecording),Background(${LANGUAGE}recordAdditionalSymptomInstructions) ; press 1 to record, 2 to skip recording
exten => s,n,WaitExten

exten => 1,1,Goto(Record-Symptom,1,1) ; yes

exten => 0,1,Goto(finish,1) ; No

exten => 7,1,Goto(myTest,getPreviousQuestion,1)  ; go to previous question

exten => 9,1,Goto(s,promptRecording)

exten => t,1,Set(REPEAT= $[${REPEAT} + 1])
exten => t,n,Gotoif($[${REPEAT}<3]?s,promptRecording:abort)
exten => t,n(abort),NoOp("add DB abort here.")  ;
exten => t,n,Playback(${LANGUAGE}sorryCouldNotHear)
exten => t,n,Playback(${LANGUAGE}tryLater)
exten => t,n,Goto(myTest,endCall,1)

exten => i,1,Playback(${LANGUAGE}invalidOption)  ; "That's not valid, try again"
exten => i,n,Goto(s,promptRecording)

exten => finish,1,Set(ABC=${ODBC_COMMITSESSION(${USER_ID,FORM_ID,INPUT_CALLER_PIN})})
exten => finish,n,Gotoif($["${ABC}" = ""]?myTest,ivrsException,1)
exten => finish,n,Gotoif($[${ABC} = -1]?myTest,ivrsException,1)
exten => finish,n,Playback(${LANGUAGE}successfullySubmittedForm)
exten => finish,n(noSubmission),Goto(myTest,endCall,1)

exten => h,1,Gotoif($[${CALL_IN_PROGRESS} != 1]?end)
exten => h,n,NoOp("###### MESSAGE: Deleting timestamp for participant with USER_ID -> "${USER_ID} ")
exten => h,n,Set(SET_PARTICIPANT_TIMESTAMP=$[${ODBC_DELETE_PARTICIPANT_TIMESTAMP(${USER_ID})}])
exten => h,n,Gotoif($["${SET_PARTICIPANT_TIMESTAMP}" = ""]?logerror)
exten => h,n,Gotoif($[${SET_PARTICIPANT_TIMESTAMP} = -1]?logerror:end)
exten => h,n(logerror),NoOp("###### ERROR: NOT ABLE TO DELETE PARTICIPANT TIMESTAMP FOR USER_ID -> "${USER_ID})
exten => h,n(end),Hangup()


[Record-Symptom]
exten => 1,1,Playback(${LANGUAGE}recordingInstructions)
exten => 1,n,Set(FILE_NAME_FORMAT=${USER_ID}_${FORM_ID}_${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)})
exten => 1,n,Set(RECORDED_FILENAME=${RECORDED_FILE_LOCATION}${FILE_NAME_FORMAT})
exten => 1,n,Record(${RECORDED_FILENAME}:wav,0,30)
;exten => 1,n,Playback(${RECORDED_FILENAME})
exten => 1,n,Set(RECORDED_FILENAME='${RECORDED_FILENAME}.wav')
exten => 1,n,Set(RETURN_VALUE=${ODBC_SAVE_RECORDED_FILENAME(${USER_ID,FORM_ID,RECORDED_FILENAME})})
exten => 1,n,Gotoif($["${RETURN_VALUE}" = ""]?myTest,ivrsException,1)
exten => 1,n,Gotoif($[${RETURN_VALUE} = -1]?myTest,ivrsException,1)
exten => 1,n,Goto(SUBMITFORM,finish,1)

exten => h,1,Gotoif($[${CALL_IN_PROGRESS} != 1]?end)
exten => h,n,NoOp("###### MESSAGE: Deleting timestamp for participant with USER_ID -> "${USER_ID} ")
exten => h,n,Set(SET_PARTICIPANT_TIMESTAMP=$[${ODBC_DELETE_PARTICIPANT_TIMESTAMP(${USER_ID})}])
exten => h,n,Gotoif($["${SET_PARTICIPANT_TIMESTAMP}" = ""]?logerror)
exten => h,n,Gotoif($[${SET_PARTICIPANT_TIMESTAMP} = -1]?logerror:end)
exten => h,n(logerror),NoOp("###### ERROR: NOT ABLE TO DELETE PARTICIPANT TIMESTAMP FOR USER_ID -> "${USER_ID})
exten => h,n(end),Hangup()

[CORE_SYMPTOM]
;play instruction message for core symptom
exten => s,1,Set(CORE_SYMPTOM_FLAG=1)
exten => s,n,Set(REPEAT=0)
exten => s,n,Set(SYMPTOM_ID=${ODBC_GET_CORE_SYMPTOM_ID(${USER_ID,FORM_ID,INPUT_CALLER_PIN})})  ; get the core symptom name
exten => s,n,Gotoif($["${SYMPTOM_ID}" = ""]?myTest,ivrsException,1)
exten => s,n,Gotoif($[${SYMPTOM_ID} = -1]?myTest,ivrsException,1)
exten => s,n,Gotoif($[${SYMPTOM_ID} = 0]?myTest,getFirstQuestion,1)
exten => s,n,Set(PREVIOUS_SYMPTOM_INDICATOR=0)
exten => s,n(getCoreSymptomFileName),Set(CORE_SYMPTOM_FILE_NAME=${ODBC_GET_CORE_SYMPTOM_FILENAME(${USER_ID,FORM_ID,SYMPTOM_ID})}) ;get the core symptom name
exten => s,n,Gotoif($["${CORE_SYMPTOM_FILE_NAME}" = ""]?myTest,ivrsException,1)
exten => s,n,Gotoif($[${CORE_SYMPTOM_FILE_NAME} = -1]?myTest,ivrsException,1)
exten => s,n,Set(CORE_SYMPTOM_FLAG=1)
exten => s,n,Set(REPEAT=0)
exten => s,n,Goto(answer,1)

exten => getPreviousSymptom,1,Set(PREVIOUS_SYMPTOM_ID_TEXT=${ODBC_GET_PREVIOUS_SYMOPTOM(${USER_ID,FORM_ID,SYMPTOM_ID})})
exten => getPreviousSymptom,n,Gotoif($["${PREVIOUS_SYMPTOM_ID_TEXT}" = ""]?ivrsException,1)
exten => getPreviousSymptom,n,Gotoif($[${PREVIOUS_SYMPTOM_ID_TEXT} = -1]?ivrsException,1)
exten => getPreviousSymptom,n,Set(PREVIOUS_SYMPTOM_ID=${CUT(PREVIOUS_SYMPTOM_ID_TEXT,_,1)})
exten => getPreviousSymptom,n,Set(PREVIOUS_SYMPTOM_TYPE=${CUT(PREVIOUS_SYMPTOM_ID_TEXT,_,2)})
exten => getPreviousSymptom,n,Gotoif($[${PREVIOUS_SYMPTOM_TYPE} = 2]?previousSymptomExist:previousQuestionExistFromCore)  ;play the
exten => getPreviousSymptom,n(previousSymptomExist),Set(SYMPTOM_ID=${PREVIOUS_SYMPTOM_ID})
exten => getPreviousSymptom,n,Set(SYMPTOM_MANDATORY_TYPE=${PREVIOUS_SYMPTOM_TYPE})
exten => getPreviousSymptom,n,Set(PREVIOUS_SYMPTOM_INDICATOR=1)
exten => getPreviousSymptom,n,Goto(s,getCoreSymptomFileName)
exten => getPreviousSymptom,n(previousQuestionExistFromCore),Set(QUESTION_ID=${PREVIOUS_SYMPTOM_ID})
exten => getPreviousSymptom,n,Set(QUESTION_MANDATORY_TYPE=${PREVIOUS_SYMPTOM_TYPE})
exten => getPreviousSymptom,n,Set(CORE_SYMPTOM_FLAG=0)
exten => getPreviousSymptom,n,Goto(myTest,getAnswer,1)

exten => playSymptomAnswer,1,GotoIf($["${SYMPTOM_ANSWER}"="1"]?play1:two)
exten => playSymptomAnswer,n(play1),Playback(${LANGUAGE}presentOption2)
exten => playSymptomAnswer,n(two),GotoIf($["${SYMPTOM_ANSWER}"="2"]?play2:confirmAnswer)
exten => playSymptomAnswer,n(play2),Playback(${LANGUAGE}presentOption1)
exten => playSymptomAnswer,n(confirmAnswer),Goto(confirmSymptomAnswerSubmission,1)

exten => confirmSymptomAnswerSubmission,1,Read(CONFIRM_ANSWER,${LANGUAGE}confirmOrChangeThisAnswerYN,1,,3)
exten => confirmSymptomAnswerSubmission,n,GotoIf($["${CONFIRM_ANSWER}"="1"]?noChangeInAnswer)
exten => confirmSymptomAnswerSubmission,n,GotoIf($["${CONFIRM_ANSWER}"="7"]?getPreviousSymptom,1)
exten => confirmSymptomAnswerSubmission,n,GotoIf($["${CONFIRM_ANSWER}"="9"]?confirmSymptomAnswerSubmission,1)
exten => confirmSymptomAnswerSubmission,n,GotoIf($["${CONFIRM_ANSWER}"="0"]?answer,notAnswered:invalidConfirmationOption,1)
exten => confirmSymptomAnswerSubmission,n(noChangeInAnswer),Set(RESPONSE=${SYMPTOM_ANSWER})
exten => confirmSymptomAnswerSubmission,n,Set(SYMPTOM_ID=${ODBC_ANSWER_CORE_SYMPTOM(${USER_ID,FORM_ID,SYMPTOM_ID,RESPONSE,PREVIOUS_SYMPTOM_INDICATOR})})
exten => confirmSymptomAnswerSubmission,n,Set(PREVIOUS_SYMPTOM_INDICATOR=0)
exten => confirmSymptomAnswerSubmission,n,Goto(s,getCoreSymptomFileName)

exten => playInstructions,1,Playback(${LANGUAGE}instructions)  ; play Instructions
exten => playInstructions,n,Gotoif($["${SYMPTOM_ID}" != ""]?answer,1)
exten => playInstructions,n,Goto(s,1)  ; go to form fill control

exten => invalidConfirmationOption,1,PlayBack(${LANGUAGE}invalidOption)  ; play the invalid option entered audio
exten => invalidConfirmationOption,n,Goto(confirmSymptomAnswerSubmission,1)  ; go back and repeat confiramtion message

exten => answer,1,Gosubif($[${FORM_HALF_COMPLETED}!=0]?myTest,playHalfWayDone,1)
exten => answer,n,Gosubif($[$[${QUESTION_COUNTER}%${RECALL_PERIOD_MODULUS_VALUE}] = 0]?myTest,playRecallPeriod,1)
exten => answer,n,Set(QUESTION_COUNTER= $[${QUESTION_COUNTER} + 1])
exten => answer,n,Playback(${LANGUAGE}${CORE_SYMPTOM_FILE_NAME})
exten => answer,n,Set(SYMPTOM_ANSWER=${ODBC_GET_CORE_SYMPTOM_ANSWER(${USER_ID,FORM_ID,SYMPTOM_ID,PREVIOUS_SYMPTOM_INDICATOR})})
exten => answer,n,Gotoif($["${SYMPTOM_ANSWER}" = ""]?myTest,ivrsException,1)
exten => answer,n,Gotoif($[${SYMPTOM_ANSWER} = -1]?myTest,ivrsException,1)
exten => answer,n,GotoIf($[${SYMPTOM_ANSWER}=0]?notAnswered:playSymptomAnswer,1)
exten => answer,n(notAnswered),Background(${LANGUAGE}presentOptions1)
exten => answer,n,WaitExten(5)

exten => 1,1,Set(RESPONSE=1)  ;Yes, submit the response to DB
exten => 1,n,Set(QUESTION_MANDATORY_TYPE=2)
exten => 1,n,Set(SYMPTOM_ID=${ODBC_ANSWER_CORE_SYMPTOM(${USER_ID,FORM_ID,SYMPTOM_ID,RESPONSE,PREVIOUS_SYMPTOM_INDICATOR})})  ; call the DB function to send the core sympotm response
exten => 1,n,Set(PREVIOUS_SYMPTOM_INDICATOR=0)
exten => 1,n,Gotoif($["${SYMPTOM_ID}" = ""]?myTest,ivrsException,1)
exten => 1,n,Gotoif($[${SYMPTOM_ID} = -1]?myTest,ivrsException,1)
exten => 1,n,Gotoif($[${SYMPTOM_ID} = 0]?myTest,getFirstQuestion,1)
exten => 1,n,Goto(s,getCoreSymptomFileName)  ; go to next core symptom

exten => 0,1,Set(RESPONSE=2)  ;No, go to next symptom
exten => 0,n,Set(QUESTION_MANDATORY_TYPE=2)
exten => 0,n,Set(SYMPTOM_ID=${ODBC_ANSWER_CORE_SYMPTOM(${USER_ID,FORM_ID,SYMPTOM_ID,RESPONSE,PREVIOUS_SYMPTOM_INDICATOR})})
exten => 0,n,Set(PREVIOUS_SYMPTOM_INDICATOR=0)
exten => 0,n,Gotoif($["${SYMPTOM_ID}" = ""]?myTest,ivrsException,1)
exten => 0,n,Gotoif($[${SYMPTOM_ID} = -1]?myTest,ivrsException,1)
exten => 0,n,Gotoif($[${SYMPTOM_ID} = 0]?myTest,getFirstQuestion,1)
exten => 0,n,Goto(s,getCoreSymptomFileName)

exten => 9,1,Goto(answer,1)

exten => 7,1,Goto(getPreviousSymptom,1)

exten => *,1,Goto(playInstructions,1)

exten => i,1,Playback(${LANGUAGE}invalidOption)  ; "That's not valid option, try again"
exten => i,n,Goto(answer,1)

exten => t,1,Set(REPEAT= $[${REPEAT} + 1])
exten => t,n,Gotoif($[${REPEAT}<3]?answer,1:abort)
exten => t,n(abort),NoOp("add DB abort here.")  ;
exten => t,n,Playback(${LANGUAGE}sorryCouldNotHear)
exten => t,n,Playback(${LANGUAGE}tryLater)
exten => t,n,Goto(myTest,endCall,1)

exten => h,1,Gotoif($[${CALL_IN_PROGRESS} != 1]?end)
exten => h,n,NoOp("###### MESSAGE: Deleting timestamp for participant with USER_ID -> "${USER_ID} ")
exten => h,n,Set(SET_PARTICIPANT_TIMESTAMP=$[${ODBC_DELETE_PARTICIPANT_TIMESTAMP(${USER_ID})}])
exten => h,n,Gotoif($["${SET_PARTICIPANT_TIMESTAMP}" = ""]?logerror)
exten => h,n,Gotoif($[${SET_PARTICIPANT_TIMESTAMP} = -1]?logerror:end)
exten => h,n(logerror),NoOp("###### ERROR: NOT ABLE TO DELETE PARTICIPANT TIMESTAMP FOR USER_ID -> "${USER_ID})
exten => h,n(end),Hangup()
